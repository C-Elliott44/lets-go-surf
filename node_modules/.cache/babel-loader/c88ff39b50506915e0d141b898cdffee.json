{"ast":null,"code":"import _classCallCheck from \"/Users/cameron_elliott/Desktop/surf-buddy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cameron_elliott/Desktop/surf-buddy/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint no-restricted-globals: 0*/\nimport auth0 from \"auth0-js\";\nimport jwtDecode from \"jwt-decode\";\nvar LOGIN_SUCCESS_PAGE = \"/secret\";\nvar LOGIN_FAILURE_PAGE = \"/\";\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: \"dev-t4f2tsc0.auth0.com\",\n      clientID: \"2hIakdfYe8Ep06Xd8sqWSkk0KsNkbhe8\",\n      redirectUri: \"http://localhost:3000/callback\",\n      audience: \"https://dev-t4f2tsc0.auth0.com/userinfo\",\n      responseType: \"token id_token\",\n      scope: \"openid profile\"\n    });\n    this.login = this.login.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      this.auth0.parseHash(function (err, authResults) {\n        if (authResults && authResults.accessToken && authResults.idToken) {\n          var expireAt = JSON.stringify(authResults.expiresIn * 1000 + new Date().getTime());\n          localStorage.setItem(\"access_token\", authResults.accessToken);\n          localStorage.setItem(\"id_token\", authResults.idToken);\n          localStorage.setItem(\"expires_at\", expireAt);\n          location.hash = \"\";\n          location.pathname = LOGIN_SUCCESS_PAGE;\n        } else if (err) {\n          location.pathname = LOGIN_FAILURE_PAGE;\n          console.log(err);\n        }\n      });\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var expireAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n      return new Date().getTime() < expireAt;\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n      location.pathname = LOGIN_FAILURE_PAGE;\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile() {\n      if (localStorage.getItem(\"id_token\")) {\n        return jwtDecode(localStorage.getItem(\"id_token\"));\n      } else {\n        return {};\n      }\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/cameron_elliott/Desktop/surf-buddy/src/Auth.js"],"names":["auth0","jwtDecode","LOGIN_SUCCESS_PAGE","LOGIN_FAILURE_PAGE","Auth","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","login","bind","authorize","parseHash","err","authResults","accessToken","idToken","expireAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","location","hash","pathname","console","log","parse","getItem","removeItem"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,kBAAkB,GAAG,SAA3B;AACA,IAAMC,kBAAkB,GAAG,GAA3B;;IAEqBC,I;;;AAUjB,kBAAc;AAAA;;AAAA,SATdJ,KASc,GATN,IAAIA,KAAK,CAACK,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAE,wBADc;AAEtBC,MAAAA,QAAQ,EAAE,kCAFY;AAGtBC,MAAAA,WAAW,EAAE,gCAHS;AAItBC,MAAAA,QAAQ,EAAE,yCAJY;AAKtBC,MAAAA,YAAY,EAAE,gBALQ;AAMtBC,MAAAA,KAAK,EAAE;AANe,KAAlB,CASM;AACV,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;;;4BAEO;AACJ,WAAKb,KAAL,CAAWc,SAAX;AACH;;;2CAEsB;AACnB,WAAKd,KAAL,CAAWe,SAAX,CAAqB,UAACC,GAAD,EAAMC,WAAN,EAAsB;AACvC,YAAIA,WAAW,IAAIA,WAAW,CAACC,WAA3B,IAA0CD,WAAW,CAACE,OAA1D,EAAmE;AAC/D,cAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAgBL,WAAW,CAACM,SAAb,GAA0B,IAA1B,GAAiC,IAAIC,IAAJ,GAAWC,OAAX,EAAhD,CAAf;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCV,WAAW,CAACC,WAAjD;AACAQ,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCV,WAAW,CAACE,OAA7C;AACAO,UAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,QAAnC;AACAQ,UAAAA,QAAQ,CAACC,IAAT,GAAgB,EAAhB;AACAD,UAAAA,QAAQ,CAACE,QAAT,GAAoB5B,kBAApB;AACH,SAPD,MAOO,IAAIc,GAAJ,EAAS;AACZY,UAAAA,QAAQ,CAACE,QAAT,GAAoB3B,kBAApB;AACA4B,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACH;AACJ,OAZD;AAaH;;;sCAEiB;AACd,UAAII,QAAQ,GAAGC,IAAI,CAACY,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,YAArB,CAAX,CAAf;AACA,aAAO,IAAIV,IAAJ,GAAWC,OAAX,KAAuBL,QAA9B;AACH;;;6BAEQ;AACLM,MAAAA,YAAY,CAACS,UAAb,CAAwB,cAAxB;AACAT,MAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,MAAAA,YAAY,CAACS,UAAb,CAAwB,YAAxB;AACAP,MAAAA,QAAQ,CAACE,QAAT,GAAoB3B,kBAApB;AACH;;;iCAEY;AACT,UAAIuB,YAAY,CAACQ,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AAClC,eAAOjC,SAAS,CAACyB,YAAY,CAACQ,OAAb,CAAqB,UAArB,CAAD,CAAhB;AACH,OAFD,MAEO;AACH,eAAM,EAAN;AACH;AACJ;;;;;;SApDgB9B,I","sourcesContent":["/* eslint no-restricted-globals: 0*/\nimport auth0 from \"auth0-js\";\nimport jwtDecode from \"jwt-decode\";\n\nconst LOGIN_SUCCESS_PAGE = \"/secret\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nexport default class Auth {\n    auth0 = new auth0.WebAuth({\n        domain: \"dev-t4f2tsc0.auth0.com\",\n        clientID: \"2hIakdfYe8Ep06Xd8sqWSkk0KsNkbhe8\",\n        redirectUri: \"http://localhost:3000/callback\",\n        audience: \"https://dev-t4f2tsc0.auth0.com/userinfo\",\n        responseType: \"token id_token\",\n        scope: \"openid profile\"\n    });\n\n    constructor() {\n        this.login = this.login.bind(this);\n    }\n\n    login() {\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        this.auth0.parseHash((err, authResults) => {\n            if (authResults && authResults.accessToken && authResults.idToken) {\n                let expireAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime());\n                localStorage.setItem(\"access_token\", authResults.accessToken);\n                localStorage.setItem(\"id_token\", authResults.idToken);\n                localStorage.setItem(\"expires_at\", expireAt);\n                location.hash = \"\";\n                location.pathname = LOGIN_SUCCESS_PAGE;\n            } else if (err) {\n                location.pathname = LOGIN_FAILURE_PAGE;\n                console.log(err);\n            }\n        })\n    }\n\n    isAuthenticated() {\n        let expireAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n        return new Date().getTime() < expireAt;\n    }\n\n    logout() {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"id_token\");\n        localStorage.removeItem(\"expires_at\");\n        location.pathname = LOGIN_FAILURE_PAGE;\n    } \n\n    getProfile() {\n        if (localStorage.getItem(\"id_token\")) {\n            return jwtDecode(localStorage.getItem(\"id_token\"));\n        } else {\n            return{};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}